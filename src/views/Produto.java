package views;

import controllers.ProdutoController;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import models.ProdutoModel;
import models.contexts.ProdutoContext;

public class Produto extends javax.swing.JFrame {

    private final ProdutoController _produtoController;
    private int _ultimoId;
    
    public Produto() throws SQLException {

        initComponents();
        this.setLocationRelativeTo(null);

        radioBtnCodigo.setSelected(true);

        _produtoController = new ProdutoController(new ProdutoContext());

        this.carregarProdutosNaTabela(tblProdutos, _produtoController.obter());
        _ultimoId = _produtoController.ultimoIdProduto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrupoDeBusca = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        spnPreco = new javax.swing.JSpinner();
        btnCadastrar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        spnCodigo = new javax.swing.JSpinner();
        radioBtnCodigo = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        radioBtnDescricao = new javax.swing.JRadioButton();
        txtBusca = new javax.swing.JTextField();
        btnAtualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Produto");

        jLabel1.setText("Descrição");

        jLabel2.setText("Preço");

        spnPreco.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 1.0f));

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos"));

        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Preço"
            }
        ));
        jScrollPane1.setViewportView(tblProdutos);

        spnCodigo.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        btnGrupoDeBusca.add(radioBtnCodigo);
        radioBtnCodigo.setText("Código");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnGrupoDeBusca.add(radioBtnDescricao);
        radioBtnDescricao.setText("Descrição");

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAtualizar)
                            .addComponent(jButton1))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(radioBtnDescricao)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spnCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(radioBtnCodigo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 196, Short.MAX_VALUE)
                        .addComponent(btnExcluir)
                        .addGap(38, 38, 38))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioBtnCodigo)
                            .addComponent(spnCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioBtnDescricao)
                            .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAtualizar))
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir)
                        .addGap(32, 32, 32))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(29, 29, 29)
                        .addComponent(spnPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(231, 231, 231)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCadastrar)
                .addGap(177, 177, 177))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(btnCadastrar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spnPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        if (txtDescricao.getText().equals("") || (float) spnPreco.getValue() == 0.0) {
            JOptionPane.showMessageDialog(null, "Nenhum campo pode estar vazio!", "Erro ao cadastrar", JOptionPane.ERROR_MESSAGE);
        } else {
            _ultimoId++;
            ProdutoModel model = new ProdutoModel(_ultimoId,txtDescricao.getText(), (float) spnPreco.getValue());
            _produtoController.adicionar(model);
            JOptionPane.showMessageDialog(null, "Cadastrado com sucesso!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            this.limpar();
            try {
                this.carregarProdutoNaTabela(tblProdutos, model);
            } catch (SQLException ex) {
                Logger.getLogger(Produto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (radioBtnCodigo.isSelected()) {
            try {
                ProdutoModel model = _produtoController.obter((int) spnCodigo.getValue());

                if (model != null) {
                    this.limparTabela(tblProdutos);
                    this.carregarProdutoNaTabela(tblProdutos, model);
                } else {
                    this.limparTabela(tblProdutos);
                    this.refreshTable(tblProdutos);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                ArrayList<ProdutoModel> produtos = _produtoController.obter(txtBusca.getText());

                if (!produtos.isEmpty()) {
                    this.limparTabela(tblProdutos);
                    this.carregarProdutosNaTabela(tblProdutos, produtos);
                } else {
                    this.limparTabela(tblProdutos);
                    this.refreshTable(tblProdutos);
                }

            } catch (SQLException ex) {
                Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        try {
            this.limparTabela(tblProdutos);
            this.carregarProdutosNaTabela(tblProdutos, _produtoController.obter());
        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if(tblProdutos.getSelectedRow()!=-1){
            int idProduto = (int) tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 0);
            _produtoController.deletar(idProduto);
            this.removerLinhaNaTabela(tblProdutos, tblProdutos.getSelectedRow());
            this.refreshTable(tblProdutos);
        }else{
            JOptionPane.showMessageDialog(null, "Você precisa selecionar um produto!", "Erro", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void limpar() {
        txtDescricao.setText(null);
        spnPreco.setValue(0);
    }

    private void limparTabela(JTable tabela) {
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        model.setRowCount(0);
        this.refreshTable(tabela);
    }

    private void carregarProdutoNaTabela(JTable tabela, ProdutoModel produto) throws SQLException {

        DefaultTableModel modeloDaTabela = (DefaultTableModel) tabela.getModel();

        modeloDaTabela.addRow(new String[modeloDaTabela.getColumnCount()]);

        tabela.setValueAt(produto.getIdProduto(), (tabela.getRowCount() - 1), 0);
        tabela.setValueAt(produto.getDescricao(), (tabela.getRowCount() - 1), 1);
        tabela.setValueAt(produto.getPreco(), (tabela.getRowCount() - 1), 2);

        this.refreshTable(tabela);
    }

    public void carregarProdutosNaTabela(ArrayList<ProdutoModel> produtos) throws SQLException {

        this.limparTabela(tblProdutos);

        int contador = 0;

        DefaultTableModel modeloDaTabela = (DefaultTableModel) tblProdutos.getModel();

        for (ProdutoModel produto : produtos) {

            modeloDaTabela.addRow(new String[modeloDaTabela.getColumnCount()]);

            tblProdutos.setValueAt(produto.getIdProduto(), contador, 0);
            tblProdutos.setValueAt(produto.getDescricao(), contador, 1);
            tblProdutos.setValueAt(produto.getPreco(), contador, 2);

            contador++;
        }

        this.refreshTable(tblProdutos);
    }

    public void carregarProdutosNaTabela(JTable tabela, ArrayList<ProdutoModel> produtos) throws SQLException {

        int contador = 0;

        DefaultTableModel modeloDaTabela = (DefaultTableModel) tabela.getModel();

        for (ProdutoModel produto : produtos) {

            modeloDaTabela.addRow(new String[modeloDaTabela.getColumnCount()]);

            tabela.setValueAt(produto.getIdProduto(), contador, 0);
            tabela.setValueAt(produto.getDescricao(), contador, 1);
            tabela.setValueAt(produto.getPreco(), contador, 2);

            contador++;
        }

        this.refreshTable(tabela);
    }

    private void removerLinhaNaTabela(JTable tabela, int linha) {
        if (linha != -1) {
            DefaultTableModel modeloDaTabela = (DefaultTableModel) tabela.getModel();
            modeloDaTabela.removeRow(linha);
        }
    }
    
    private void refreshTable(JTable tabela) {
        tabela.setModel(tabela.getModel());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.ButtonGroup btnGrupoDeBusca;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioBtnCodigo;
    private javax.swing.JRadioButton radioBtnDescricao;
    private javax.swing.JSpinner spnCodigo;
    private javax.swing.JSpinner spnPreco;
    private javax.swing.JTable tblProdutos;
    private javax.swing.JTextField txtBusca;
    private javax.swing.JTextField txtDescricao;
    // End of variables declaration//GEN-END:variables
}
